<?php

namespace App\Services;

use App\My\Resume;
use App\Services\ElasticSearch\ElasticSearchService;

class PostsSearchService extends ElasticSearchService
{

    protected $type = 'posts';


    public function search($data)
    {
        if(env('ELASTIC_ON')){
            $searchParams = [
                ['match' => ['title' => $data]],
                ['match' => ['author' => $data]],
                ['match' => ['category' => $data]],
                ['term' => ['tags.name' => $data]]
            ];

            return parent::search($searchParams);
        }
    }

    public function create($data, $id)
    {
        if(env('ELASTIC_ON')){
            $data = $this->process($data);
            return parent::create($data, $id); // TODO: Change the autogenerated stub
        }

    }

    public function update($data, $id)
    {
        if(env('ELASTIC_ON')){
            $data = $this->process($data);
            return parent::update($data, $id); // TODO: Change the autogenerated stub
        }

    }


    private function process($post)
    {
        $return['title'] = $post->title;
        $return['author'] = $post->user->name;
        $return['slug'] = $post->slug;
        $return['image'] = $post->image;
        $return['resume'] = Resume::build()->intelligentResume($post->content);
        $return['category'] = $post->categorie->name;
        $return['tags'] = $post->tags->toArray();
        $return['created_at'] = $post->created_at->format('Y-m-d');
        $return['updated_at'] = $post->updated_at->format('Y-m-d');
        $return['activated_at'] = $post->activated_at;

        return $return;
    }


}